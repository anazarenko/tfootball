<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TeamRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TeamRepository extends EntityRepository
{
    /**
     * Find team by members entity
     *
     * @param array $teamMembers array of team members
     * @return array
     */
    public function findTeamByMembers($teamMembers) {

        $playerCount = count($teamMembers);
        $qb = $this->createQueryBuilder('t');
        $builder = $qb->select('t')
            ->innerJoin('t.users', 'u')
            ->where('t.playerCount = :playerCount');

        foreach ($teamMembers as $member) {
            $builder = $builder->andWhere('u.id = :memberID')
                ->setParameter('memberID', $member->getId());
        }

        $team = $builder->setMaxResults(1)
            ->setParameter('playerCount', $playerCount)
            ->getQuery()
            ->getOneOrNullResult();

        return $team;
    }

    /**
     * Find team by members entity
     *
     * @param array $teamMemberIDs array of team IDs
     * @return array
     */
    public function findTeamByMemberIDs($teamMemberIDs) {

        if (!$teamMemberIDs) {
            return null;
        }

        $playerCount = count($teamMemberIDs);
        $qb = $this->createQueryBuilder('t');
        $builder = $qb->select('t')
            ->innerJoin('t.users', 'u')
            ->where('t.playerCount = :playerCount');

        $i = 1;
        foreach ($teamMemberIDs as $memberID) {
            $builder = $builder->andWhere('u.id = :memberID_'.$i)
                ->setParameter('memberID_'.$i, $memberID);
            $i++;
        }

        $team = $builder->setMaxResults(1)
            ->setParameter('playerCount', $playerCount)
            ->getQuery()
            ->getOneOrNullResult();

        return $team;
    }
}
